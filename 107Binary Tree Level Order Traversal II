# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def levelOrderBottom(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        
        res = []
        if not root:
            return res
        if not root.right and not root.left:
            res.append([root.val])
            return res  
            
        stack = [root]
        level = [1]
        bag = []
        lev_cur = 1
        
        while stack:
            node = stack.pop(0)
            lev = level.pop(0)
            if lev_cur == lev:
                bag.append(node.val)
            else:
                lev_cur = lev
                res.append(list(bag))
                bag = []
                bag.append(node.val)
                
            if node.left:
                level.append(lev+1)
                stack.append(node.left)
            if node.right:
                level.append(lev+1)
                stack.append(node.right)

        res.append(list(bag))
        res.reverse()
                
        return res
                
            
            
            
            
            
        
        